name: testing code transfer

on:
  push:
    branches: [main]
permissions:
  id-token: write
  contents: write
  repository-projects: write
  pull-requests: write
  deployments: write
jobs:
  checkBuild:
    name: build
    runs-on: ubuntu-latest
    steps:
    
    - name: checkout
      uses: actions/checkout@v2

    - name: remove current remote repo
      run: rm -rf .git      
    - name: Preparing worktree
      working-directory: .
      run: git init
    - name: remove origin
      working-directory: .
      run: git remote -v      
    - name: add remote repo
      working-directory: .
      run: git remote add origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/akash97715/action_test.git
    - name: Checking if there are files to commitâ€¦
      working-directory: .
      run: git add .
    - name: config git
      working-directory: .
      run: |
        git config user.email ${{ github.actor }}@noreply.com
        git config user.name ${{ github.actor }}
    - name: get version
      working-directory: .
      id: version
      run: echo "::set-output name=version-number::$(grep -Po "[0-9].[0-9].[0.9]" plugin.json)"
      shell: bash        
    - name: commiting files to deploy branch
      working-directory: .
      run: git commit  -m "STORYBOARD BUILD V${{ steps.version.outputs.version-number }}"

        
        
    - name: pushing to remote deploy branch
      working-directory: .
      run: git push --force https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/akash97715/action_test.git master:star
  deploy:
    needs: [checkBuild]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: 'akash97716/code-transfer-test'
        ref: 'main'
        token: ${{secrets.GH_PAT}}
    - name: deploy
      env:
          userToken: ${{secrets.GH_PAT}}
      uses: ./
      id: deployment
      with:
        repo: 'akash97715/action_test'
        branch: 'master'
        pluginId: 'storyboard-ui-V2'
        dssenv: emea_design
    - name: Get the output status
      run: echo "The status was ${{ steps.deployment.outputs.status }}"  
